{"version":3,"sources":["../src/hasher.js"],"names":["Feature","require","module","exports","type","SERVICE","load_","app","options","name","hasha","tryRequire","registerService"],"mappings":";;;;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,WAAD,CAA3B;;AAOAC,MAAM,CAACC,OAAP,GAAiB;AAKbC,EAAAA,IAAI,EAAEJ,OAAO,CAACK,OALD;AAgBbC,EAAAA,KAAK,EAAE,gBAAgBC,GAAhB,EAAqBC,OAArB,EAA8BC,IAA9B,EAAoC;AACvC,UAAMC,KAAK,GAAGH,GAAG,CAACI,UAAJ,CAAe,OAAf,CAAd;AACAJ,IAAAA,GAAG,CAACK,eAAJ,CAAoBH,IAApB,EAA0BC,KAA1B;AACH;AAnBY,CAAjB","sourcesContent":["const { Feature } = require('@genx/app');\n\n/**\n * Hasher, get the hash of a buffer/string/stream/file.\n * @module Feature_Hasher\n */\n\nmodule.exports = {\n    /**\n     * This feature is loaded at service stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * Load the feature\n     * @param {App} app - The app module object\n     * @param {object} [options] - Options for the feature\n     * @returns {Promise.<*>}\n     *\n     * @see[methods]{@link https://github.com/sindresorhus/hasha}\n     *\n     */\n    load_: async function (app, options, name) {\n        const hasha = app.tryRequire('hasha');\n        app.registerService(name, hasha);\n    },\n};\n"],"file":"hasher.js"}